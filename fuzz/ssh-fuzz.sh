#!/bin/bash
#
# Random unguided fuzzing against a network port
# Connects to the target via SSH to watch for process crash
#
# Requirements:
#  - radamsa and tshark in your PATH
#  - SSH access to the target system (doesn't need to be root)
#
# This script runs tshark, so check with tshark --list-interfaces that you've got
# privileges enough to capture traffic.
#
# Set your process name in $TARGET
# Set connection parameters in $HOST and $PORT
# Set the capture interface in $INTERFACE (something like "eth0"
#
# Pcaps of the last five minutes before the crash will be in the results directory

# These are the parameters of the target service to fuzz
# The interface must match the local one, so that we can capture traffic
INTERFACE=${INTERFACE:-usbnet}
TARGET=${TARGET:-nmea-engine}
HOST=${HOST:-192.168.0.123}
PORT=${PORT:-2002}
INPUT=${INPUT:-/tmp/fuzz_input}

# These are the SSH credentials for the machine
# They are used to check the liveliness of the target process
TARGET_SSH=${TARGET_SSH:-192.168.0.123}
TARGET_USER=${TARGET_USER:-root}
TARGET_PASS=${TARGET_PASS:-letmein}

function target_cmd() {
  sshpass -p "${TARGET_PASS}" -- ssh "${TARGET_USER}@${TARGET_SSH}" "$1"
}

function find_target_process() {
  local TARGET_PIDS=( $(target_cmd "ps | grep '${TARGET}' | grep -v grep | awk '{print \$1}'") )

  if [ ${#TARGET_PIDS[@]} -gt 1 ]; then
    echo "Too many target processes by that name (${TARGET_PIDS[@]}). Narrow down your TARGET variable." > /dev/stderr
    exit 1
  fi

  if [ ${#TARGET_PIDS[@]} -ne 1 ]; then
    echo "No target process found. Check your TARGET variable." >/dev/stderr
    exit 1
  fi

  echo "${TARGET_PIDS[0]}"
}

function wait_for_crash() {

  local TARGET_PID="$1"

  # Block until that process dies
  echo "Monitoring target PID ${TARGET_PID}"
  target_cmd "while ps | awk '{print \$1}' | grep -q '^${TARGET_PID}\$'; do sleep 1; done"
}

function do_cleanup {
  # Gracefully stop our processes
  kill -TERM ${RADAMSA_PID}
  kill -TERM ${TSHARK_PID}

  # Less gracefully stop packet capture
  sleep 1
  kill -9 ${RADAMSA_PID} 2>/dev/null
  kill -9 ${TSHARK_PID} 2>/dev/null
  
}

TARGET_PID=$(find_target_process) || exit 1


TIMESTAMP=$(date +%y%m%d_%H%M%S)
RESULTS=$(echo "fuzz-results-${TARGET}-${TIMESTAMP}" | tr -d '/$;\\')
RESULTS="${PWD}/${RESULTS}"

mkdir -p "${RESULTS}"
echo "Saving results to ${RESULTS}"

# Create an input if none exists already
[ ! -e "${INPUT}" ] && head -n 2 /dev/random > "${INPUT}"

# Save five minutes of rotating packet dump
tshark -b duration:60 -b files:5 -F pcapng -f "tcp port ${PORT}" -i ${INTERFACE} -w "${RESULTS}/fuzz_traffic.pcap" &
TSHARK_PID=$!

# Start the fuzzer!!
radamsa -n inf --output ${HOST}:${PORT} < "${INPUT}"
RADAMSA_PID=$!

trap do_cleanup EXIT HUP INT TERM

wait_for_crash "${TARGET_PID}"

echo "Target process ${TARGET_PID} died."
echo "Consult ${RESULT} for packet captures."

