#!/bin/bash
# Run as root

DO_FS=0

function die {
  echo $*
  exit 1
}

DEST="${1}"

SCRIPT="${BASH_SOURCE}"
RECON_ROOT=$(cd `dirname "${SCRIPT}"` && pwd)
source "${RECON_ROOT}/_setup.env"

ROOTDIRS=$(ls / | egrep -v '^proc|^sys')

[ -z "$DEST" ] && die "$0 <dest-dir>"

[ -e "$DEST" -a ! -d "$DEST" ] && die "${DEST} already exists."


mkdir -p $DEST || die "Unable to create ${DEST}"
cd $DEST || die "Unable to enter ${DEST}"


echo "Clean root checks..."

# Processes
ps aux > processes.txt

ss -aep > netstat.txt

ip route show table all > route.txt

lsmod > modules.txt
mount > mounts.txt

cp /etc/passwd passwd.txt
cp /etc/group group.txt


echo "Systemd services..."
systemctl > systemd.txt
find /etc/systemd -iname '*.service' 2>/dev/null |
  while read SVC; do
    echo "#-----------------------"
    echo "# ${SVC}"
    echo "#-----------------------"
    cat "${SVC}"
    echo -e "\n\n\n"
  done > services.txt

echo "Cron jobs..."
mkdir -p cron
cp -r /etc/cron* cron/

find /var/spool/cron -type f 2>/dev/null |
  while read CRONTAB; do
    echo "# -----------------------"
    echo "# ${CRONTAB}"
    echo "# -----------------------"
    cat "${CRONTAB}"
    echo -e "\n\n\n"
  done > crontabs.txt

# Don't clobber the package lists, in case we re-run this script
# 3_intrusive_recon may have installed stuff, after all.
echo "Installed packages..."
[ ! -f packages.txt ] && package_list > packages.txt
[ ! -f packages_local.txt ] && package_list local > packages_local.txt

echo "Packages of running binaries..."
readlink /proc/*/exe | package_owner | sort | uniq > packages_running.txt

echo "Packages of running binaries, including their libraries..."
cat /proc/*/maps | grep '/' | awk '{print $6}' | sort | uniq \
  | package_owner 2>/dev/null \
  sort | uniq > packages_running_libs.txt

echo "IPtables ipv4..."
cat /proc/net/ip_tables_names |
  while read TABLE; do
    iptables -L -n -t ${TABLE} > ip4tables_${TABLE}.txt
  done

echo "IPtables ipv6..."
cat /proc/net/ip6_tables_names |
  while read TABLE; do
    ip6tables -L -n -t ${TABLE} > ip6tables_${TABLE}.txt
  done


if [ $DO_FS -eq 1 ]; then
  echo "Listing filesystem..."
  for D in $ROOTDIRS; do
    find "/${D}" -exec ls -lahd '{}' ';' 2>/dev/null
  done > filesystem.txt

  echo "Listing ACL'd files..."
  for D in $ROOTDIRS; do
    getfacl -R --skip-base -p "/${D}"
  done > acl_files.txt
fi

if [ -x "${LYNISDIR}/lynis" ]; then
  echo "Lynis..."
  chown -R root:root "${LYNISDIR}"
  (cd ${LYNISDIR} && ./lynis audit system) > lynis.txt
  mv /var/log/lynis-report.dat lynis-report.dat
  mv /var/log/lynis.log lynis.log
fi

distro_specific_clean "${DEST}"

echo "Done."

