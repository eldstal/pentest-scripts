#!/bin/bash
#
# Sets a single ANSI color in ~/.prompt_color
# If ~/.wallpaper_template is an image, uses it to generate a colorized ~/.wallpaper.png 

WALL_TEMPLATE=${HOME}/.wallpaper_template
WALL_IMAGE=${HOME}/.wallpaper.png
SCRIPT_ROOT=$(cd `dirname $BASH_SOURCE` && pwd)

NEW_HOST="$1"

function select_prompt_color {

  echo "Selecting prompt color"
  while true; do
    PROMPT_COLOR=$(seq 1 230 | shuf | head -n 1)
    echo -e "\e[2KColor \e[38;5;${PROMPT_COLOR}m${PROMPT_COLOR}\e[0m. y to accept, numeric code to choose your own, ENTER to pick at random again."

    read CHOICE

    if (( 10#${CHOICE} )) 2>/dev/null; then
      # A number
      PROMPT_COLOR=$CHOICE

    elif [ "${CHOICE}" != "y" ]; then
      # Not a number, reroll
      continue

    fi

    echo "${PROMPT_COLOR}" > ~/.prompt_color
    break
  done

  echo "Use ~/.prompt_color in your .bash_profile."
}

[ -z "${NEW_HOST}" ] && read -p "Enter new host name> " NEW_HOST

# New hostname must be in /etc/hosts for sudo to work
echo "127.0.0.1 ${NEW_HOST}" | sudo tee -a /etc/hosts

sudo hostnamectl hostname "${NEW_HOST}"

sudo rm -v /etc/ssh/ssh_host_*
sudo dpkg-reconfigure openssh-server

select_prompt_color


if [ -f "${WALL_TEMPLATE}" ]; then

  echo "Re-colorizing wallpaper"

  $(SCRIPT_ROOT)/ansi_colorize.py --input "${WALL_TEMPLATE}" --out "${WALL_IMAGE}" --color $(cat ~/.prompt_color)

fi
